{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Documents\\\\Web Development\\\\Eclipse Workplace\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [\"Toronto\", \"Massachusetts\", \"New York\", \"California\", \"Texas\", \"Florida\", \"Illinois\", \"Georgia\", \"Colorado\", \"Columbia\"];\nexport default function SearchBar() {\n  _s();\n  let navigate = useNavigate();\n  const [fromCity, setFromCity] = useState(\"\");\n  const [toCity, setToCity] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [formErrors, setFormErrors] = useState({\n    fromCity: \"\",\n    toCity: \"\",\n    startDate: \"\"\n  });\n  const validateForm = () => {\n    let errors = {};\n\n    //Validate fromCity\n    if (!fromCity.trim) {\n      errors.fromCity = \"From is required\";\n    }\n\n    //Validate toCity\n    if (!toCity.trim) {\n      errors.fromCity = \"To is required\";\n    }\n\n    //Validate startDate\n    if (!startDate.trim) {\n      errors.fromCity = \"start date is required\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const handleFromCityChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFromCity(event.target.value);\n    setFormErrors({\n      ...formErrors,\n      [name]: value\n    });\n  };\n  const handleToCityChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setToCity(event.target.value);\n    setFormErrors({\n      ...formErrors,\n      [name]: value\n    });\n  };\n  const handleStartDateChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setStartDate(event.target.value);\n    setFormErrors({\n      ...formErrors,\n      [name]: value\n    });\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      console.log(`From City: ${fromCity}, To City: ${toCity}, Start Date: ${startDate}`);\n      navigate(\"/displayFlights\");\n    }\n\n    // you can add your login logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: formErrors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formErrors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        value: fromCity,\n        onChange: handleFromCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"destination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"select\",\n        value: toCity,\n        onChange: handleToCityChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: city,\n          children: city\n        }, city, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"date-picker\",\n        type: \"date\",\n        value: startDate,\n        onChange: handleStartDateChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-btn\",\n        type: \"submit\",\n        value: \"Search\",\n        onClick: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"ki+o9LJjAqk+PfNK37ChKoYKVb0=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","cities","SearchBar","_s","navigate","fromCity","setFromCity","toCity","setToCity","startDate","setStartDate","formErrors","setFormErrors","validateForm","errors","trim","Object","keys","length","handleFromCityChange","event","name","value","target","handleToCityChange","handleStartDateChange","handleSearch","e","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","map","city","type","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Documents/Web Development/Eclipse Workplace/FinalProject/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../css/SearchBar.css\";\r\n\r\nconst cities = [\r\n  \"Toronto\",\r\n  \"Massachusetts\",\r\n  \"New York\",\r\n  \"California\",\r\n  \"Texas\",\r\n  \"Florida\",\r\n  \"Illinois\",\r\n  \"Georgia\",\r\n  \"Colorado\",\r\n  \"Columbia\",\r\n];\r\nexport default function SearchBar() {\r\n  let navigate = useNavigate();\r\n  const [fromCity, setFromCity] = useState(\"\");\r\n  const [toCity, setToCity] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n\r\n  const [formErrors, setFormErrors] = useState({\r\n    fromCity: \"\",\r\n    toCity: \"\",\r\n    startDate: \"\",\r\n  });\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n\r\n    //Validate fromCity\r\n    if (!fromCity.trim) {\r\n      errors.fromCity = \"From is required\";\r\n    }\r\n\r\n    //Validate toCity\r\n    if (!toCity.trim) {\r\n      errors.fromCity = \"To is required\";\r\n    }\r\n\r\n    //Validate startDate\r\n    if (!startDate.trim) {\r\n      errors.fromCity = \"start date is required\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const handleFromCityChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFromCity(event.target.value);\r\n    setFormErrors({ ...formErrors, [name]: value });\r\n  };\r\n\r\n  const handleToCityChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setToCity(event.target.value);\r\n    setFormErrors({ ...formErrors, [name]: value });\r\n  };\r\n\r\n  const handleStartDateChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setStartDate(event.target.value);\r\n    setFormErrors({ ...formErrors, [name]: value });\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      console.log(\r\n        `From City: ${fromCity}, To City: ${toCity}, Start Date: ${startDate}`\r\n      );\r\n      navigate(\"/displayFlights\");\r\n    }\r\n\r\n    // you can add your login logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <div className=\"error\">\r\n        {formErrors.name && <span>{formErrors.name}</span>}\r\n      </div>\r\n      <form onSubmit={handleSearch}>\r\n        <label htmlFor=\"origin\"></label>\r\n        <select\r\n          className=\"select\"\r\n          value={fromCity}\r\n          onChange={handleFromCityChange}\r\n        >\r\n          <option value=\"\">From</option>\r\n          {cities.map((city) => (\r\n            <option key={city} value={city}>\r\n              {city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"destination\"></label>\r\n        <select className=\"select\" value={toCity} onChange={handleToCityChange}>\r\n          <option value=\"\">To</option>\r\n          {cities.map((city) => (\r\n            <option key={city} value={city}>\r\n              {city}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label htmlFor=\"startDate\"></label>\r\n        <input\r\n          className=\"date-picker\"\r\n          type=\"date\"\r\n          value={startDate}\r\n          onChange={handleStartDateChange}\r\n          required\r\n        />\r\n\r\n        <input\r\n          className=\"search-btn\"\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          onClick={handleSearch}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}