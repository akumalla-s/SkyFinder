{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Documents\\\\Web Development\\\\Eclipse Workplace\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/SearchBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [\"Toronto\", \"Vancouver\", \"Boston\", \"Ottawa\", \"New York\", \"Chicago\", \"Los Angeles\"];\nexport default function SearchBar() {\n  _s();\n  const [fromCity, setFromCity] = useState(\"\");\n  const [toCity, setToCity] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const handleFromCityChange = event => {\n    setFromCity(event.target.value);\n  };\n  const handleToCityChange = event => {\n    setToCity(event.target.value);\n  };\n  const handleStartDateChange = event => {\n    setStartDate(event.target.value);\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    console.log(`From City: ${fromCity}, To City: ${toCity}, Start Date: ${startDate}`);\n    // you can add your login logic here\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"select\",\n      value: fromCity,\n      onChange: handleFromCityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: toCity,\n      onChange: handleToCityChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDate,\n      onChange: handleStartDateChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchBar, \"Gyryb/4vN4VarD4xX6VWInfrXB4=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","cities","SearchBar","_s","fromCity","setFromCity","toCity","setToCity","startDate","setStartDate","handleFromCityChange","event","target","value","handleToCityChange","handleStartDateChange","handleSearch","e","preventDefault","console","log","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","city","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Documents/Web Development/Eclipse Workplace/FinalProject/frontend/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/SearchBar.css\";\r\n\r\nconst cities = [\r\n  \"Toronto\",\r\n  \"Vancouver\",\r\n  \"Boston\",\r\n  \"Ottawa\",\r\n  \"New York\",\r\n  \"Chicago\",\r\n  \"Los Angeles\",\r\n];\r\nexport default function SearchBar() {\r\n  const [fromCity, setFromCity] = useState(\"\");\r\n  const [toCity, setToCity] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n\r\n  const handleFromCityChange = (event) => {\r\n    setFromCity(event.target.value);\r\n  };\r\n\r\n  const handleToCityChange = (event) => {\r\n    setToCity(event.target.value);\r\n  };\r\n\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    console.log(\r\n      `From City: ${fromCity}, To City: ${toCity}, Start Date: ${startDate}`\r\n    );\r\n    // you can add your login logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <select\r\n        className=\"select\"\r\n        value={fromCity}\r\n        onChange={handleFromCityChange}\r\n      >\r\n        <option value=\"\">From</option>\r\n        {cities.map((city) => (\r\n          <option key={city} value={city}>\r\n            {city}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={toCity} onChange={handleToCityChange}>\r\n        <option value=\"\">To</option>\r\n        {cities.map((city) => (\r\n          <option key={city} value={city}>\r\n            {city}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input type=\"date\" value={startDate} onChange={handleStartDateChange} />\r\n      <button onClick={handleSearch}>Search</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}