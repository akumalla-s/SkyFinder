{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Documents\\\\Web Development\\\\Eclipse Workplace\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/Profile.css\";\nimport HelperService from \"../services/HelperService\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdatePassword() {\n  _s();\n  const [user, setUser] = useState({\n    password: \"\"\n  });\n  const [formErrors, setFormErrors] = useState({\n    password: \"\"\n  });\n  const validateForm = () => {\n    let errors = {};\n\n    // Validate password\n    if (!user.password.trim()) {\n      errors.password = \"Password is required\";\n    } else if (user.password.length < 8) {\n      errors.password = \"Password must be at least 8 characters long\";\n    }\n\n    // Validate confirm password\n    if (!user.confirmPassword.trim()) {\n      errors.confirmPassword = \"Confirm password is required\";\n    } else if (user.confirmPassword !== user.password) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEditClick = () => {\n    setIsEditing(true);\n  };\n  const handleCancelClick = () => {\n    setIsEditing(false);\n    setUser(user);\n  };\n  const handleSaveClick = event => {\n    // save changes to user profile\n    event.preventDefault();\n    if (validateForm()) {\n      setIsEditing(false);\n      console.log(user);\n      const currentUser = HelperService.getCurrentUserData();\n      let id = currentUser ? currentUser.username : \"\";\n      let token = currentUser ? currentUser.token : \"\";\n      const url = `http://localhost:8080/user/updateUser/${id}`;\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const body = {\n        username: user.username,\n        email: user.email,\n        name: user.name\n      };\n      updateUserPassword(url, body, config);\n    }\n  };\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const updateUserPassword = async (url, body, config) => {\n    try {\n      console.log(\"updatePassword \" + url + \" \" + config);\n      const response = await axios.put(url, body, config);\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"UpdatePassword\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n_s(UpdatePassword, \"Weycdypexs+2zJkCJE4azbVmrSM=\");\n_c = UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","useState","HelperService","axios","jsxDEV","_jsxDEV","UpdatePassword","_s","user","setUser","password","formErrors","setFormErrors","validateForm","errors","trim","length","confirmPassword","Object","keys","isEditing","setIsEditing","handleEditClick","handleCancelClick","handleSaveClick","event","preventDefault","console","log","currentUser","getCurrentUserData","id","username","token","url","config","headers","Authorization","body","email","name","updateUserPassword","handleChange","value","target","response","put","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Documents/Web Development/Eclipse Workplace/FinalProject/frontend/src/components/UpdatePassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/Profile.css\";\r\nimport HelperService from \"../services/HelperService\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UpdatePassword() {\r\n  const [user, setUser] = useState({\r\n    password: \"\",\r\n  });\r\n  const [formErrors, setFormErrors] = useState({\r\n    password: \"\",\r\n  });\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n\r\n    // Validate password\r\n    if (!user.password.trim()) {\r\n      errors.password = \"Password is required\";\r\n    } else if (user.password.length < 8) {\r\n      errors.password = \"Password must be at least 8 characters long\";\r\n    }\r\n\r\n    // Validate confirm password\r\n    if (!user.confirmPassword.trim()) {\r\n      errors.confirmPassword = \"Confirm password is required\";\r\n    } else if (user.confirmPassword !== user.password) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n\r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setIsEditing(false);\r\n    setUser(user);\r\n  };\r\n\r\n  const handleSaveClick = (event) => {\r\n    // save changes to user profile\r\n    event.preventDefault();\r\n    if (validateForm()) {\r\n      setIsEditing(false);\r\n      console.log(user);\r\n      const currentUser = HelperService.getCurrentUserData();\r\n      let id = currentUser ? currentUser.username : \"\";\r\n      let token = currentUser ? currentUser.token : \"\";\r\n      const url = `http://localhost:8080/user/updateUser/${id}`;\r\n      const config = {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      };\r\n      const body = {\r\n        username: user.username,\r\n        email: user.email,\r\n        name: user.name,\r\n      };\r\n      updateUserPassword(url, body, config);\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const updateUserPassword = async (url, body, config) => {\r\n    try {\r\n      console.log(\"updatePassword \" + url + \" \" + config);\r\n      const response = await axios.put(url, body, config);\r\n      console.log(response);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return <div>UpdatePassword</div>;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}