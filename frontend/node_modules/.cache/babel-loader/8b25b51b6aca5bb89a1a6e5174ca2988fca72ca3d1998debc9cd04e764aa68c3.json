{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport HelperService from \"../services/HelperService\";\nexport default function Logout() {\n  _s();\n  const user = HelperService.getCurrentUserData();\n  console.log(user);\n  let navigate = useNavigate();\n  const {\n    lastActivity\n  } = useParams();\n  useEffect(() => {\n    console.log(\"use effect called\");\n    const interval = setInterval(() => {\n      if (Date.now() - lastActivity > 1 * 60 * 1000) {\n        localStorage.removeItem(\"userData\");\n        navigate(\"/\");\n        window.location.reload();\n      }\n    }, 10000); // Check every 10 seconds\n    return () => clearInterval(interval);\n  }, [lastActivity, navigate]);\n  useEffect(() => {\n    if (user) {\n      localStorage.removeItem(\"userData\");\n      navigate(\"/\");\n      window.location.reload();\n    }\n  }, [navigate, user]);\n  return null;\n}\n_s(Logout, \"fY2jC7q2jCbgYkjYEucRbsg3cyE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["useNavigate","useParams","useEffect","HelperService","Logout","_s","user","getCurrentUserData","console","log","navigate","lastActivity","interval","setInterval","Date","now","localStorage","removeItem","window","location","reload","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Documents/Web Development/Eclipse Workplace/FinalProject/frontend/src/components/Logout.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport HelperService from \"../services/HelperService\";\r\n\r\nexport default function Logout() {\r\n  const user = HelperService.getCurrentUserData();\r\n  console.log(user);\r\n  let navigate = useNavigate();\r\n\r\n  const { lastActivity } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect called\");\r\n    const interval = setInterval(() => {\r\n      if (Date.now() - lastActivity > 1 * 60 * 1000) {\r\n        localStorage.removeItem(\"userData\");\r\n        navigate(\"/\");\r\n        window.location.reload();\r\n      }\r\n    }, 10000); // Check every 10 seconds\r\n    return () => clearInterval(interval);\r\n  }, [lastActivity, navigate]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      localStorage.removeItem(\"userData\");\r\n      navigate(\"/\");\r\n      window.location.reload();\r\n    }\r\n  }, [navigate, user]);\r\n\r\n  return null;\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,aAAa,MAAM,2BAA2B;AAErD,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,IAAI,GAAGH,aAAa,CAACI,kBAAkB,EAAE;EAC/CC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,IAAII,QAAQ,GAAGV,WAAW,EAAE;EAE5B,MAAM;IAAEW;EAAa,CAAC,GAAGV,SAAS,EAAE;EAEpCC,SAAS,CAAC,MAAM;IACdM,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMG,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIC,IAAI,CAACC,GAAG,EAAE,GAAGJ,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,EAAE;QAC7CK,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;QACnCP,QAAQ,CAAC,GAAG,CAAC;QACbQ,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACX,OAAO,MAAMC,aAAa,CAACT,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACD,YAAY,EAAED,QAAQ,CAAC,CAAC;EAE5BR,SAAS,CAAC,MAAM;IACd,IAAII,IAAI,EAAE;MACRU,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;MACnCP,QAAQ,CAAC,GAAG,CAAC;MACbQ,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IAC1B;EACF,CAAC,EAAE,CAACV,QAAQ,EAAEJ,IAAI,CAAC,CAAC;EAEpB,OAAO,IAAI;AACb;AAACD,EAAA,CA5BuBD,MAAM;EAAA,QAGbJ,WAAW,EAEDC,SAAS;AAAA;AAAAqB,EAAA,GALZlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}