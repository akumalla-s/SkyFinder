{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srini\\\\OneDrive\\\\Documents\\\\Web Development\\\\Eclipse Workplace\\\\FinalProject\\\\frontend\\\\src\\\\components\\\\DisplayFlights.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/DisplayFlights.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DisplayFlights(props) {\n  _s();\n  const {\n    flights\n  } = props;\n\n  // State variables to keep track of sorting preference and sorted flights\n  const [sortPreference, setSortPreference] = useState(\"\");\n  const [sortedFlights, setSortedFlights] = useState(flights);\n\n  // Function to handle sorting based on user preference\n  const handleSort = preference => {\n    let sorted = [];\n    if (preference === \"price\") {\n      sorted = flights.sort((a, b) => a.price - b.price);\n    } else if (preference === \"duration\") {\n      sorted = flights.sort((a, b) => a.duration - b.duration);\n    } else if (preference === \"ratings\") {\n      sorted = flights.sort((a, b) => b.userRatings - a.userRatings);\n    }\n    setSortPreference(preference);\n    setSortedFlights(sorted);\n  };\n\n  // If no sort preference is set, display the best and other flights as usual\n  if (sortPreference === \"\") {\n    const bestFlights = flights.slice(0, 2);\n    const otherFlights = flights.slice(2);\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DisplayFlights\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n_s(DisplayFlights, \"3tpgu9ds40P1MUqfhAvfv79BiqA=\");\n_c = DisplayFlights;\nvar _c;\n$RefreshReg$(_c, \"DisplayFlights\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DisplayFlights","props","_s","flights","sortPreference","setSortPreference","sortedFlights","setSortedFlights","handleSort","preference","sorted","sort","a","b","price","duration","userRatings","bestFlights","slice","otherFlights","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["C:/Users/srini/OneDrive/Documents/Web Development/Eclipse Workplace/FinalProject/frontend/src/components/DisplayFlights.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/DisplayFlights.css\";\r\n\r\nexport default function DisplayFlights(props) {\r\n  const { flights } = props;\r\n\r\n  // State variables to keep track of sorting preference and sorted flights\r\n  const [sortPreference, setSortPreference] = useState(\"\");\r\n  const [sortedFlights, setSortedFlights] = useState(flights);\r\n\r\n  // Function to handle sorting based on user preference\r\n  const handleSort = (preference) => {\r\n    let sorted = [];\r\n    if (preference === \"price\") {\r\n      sorted = flights.sort((a, b) => a.price - b.price);\r\n    } else if (preference === \"duration\") {\r\n      sorted = flights.sort((a, b) => a.duration - b.duration);\r\n    } else if (preference === \"ratings\") {\r\n      sorted = flights.sort((a, b) => b.userRatings - a.userRatings);\r\n    }\r\n    setSortPreference(preference);\r\n    setSortedFlights(sorted);\r\n  };\r\n\r\n  // If no sort preference is set, display the best and other flights as usual\r\n  if (sortPreference === \"\") {\r\n    const bestFlights = flights.slice(0, 2);\r\n    const otherFlights = flights.slice(2);\r\n\r\n    return <div></div>;\r\n  }\r\n\r\n  return <div>DisplayFlights</div>;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAQ,CAAC,GAAGF,KAAK;;EAEzB;EACA,MAAM,CAACG,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAACM,OAAO,CAAC;;EAE3D;EACA,MAAMK,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAIC,MAAM,GAAG,EAAE;IACf,IAAID,UAAU,KAAK,OAAO,EAAE;MAC1BC,MAAM,GAAGP,OAAO,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,KAAK,GAAGD,CAAC,CAACC,KAAK,CAAC;IACpD,CAAC,MAAM,IAAIL,UAAU,KAAK,UAAU,EAAE;MACpCC,MAAM,GAAGP,OAAO,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACG,QAAQ,GAAGF,CAAC,CAACE,QAAQ,CAAC;IAC1D,CAAC,MAAM,IAAIN,UAAU,KAAK,SAAS,EAAE;MACnCC,MAAM,GAAGP,OAAO,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACG,WAAW,GAAGJ,CAAC,CAACI,WAAW,CAAC;IAChE;IACAX,iBAAiB,CAACI,UAAU,CAAC;IAC7BF,gBAAgB,CAACG,MAAM,CAAC;EAC1B,CAAC;;EAED;EACA,IAAIN,cAAc,KAAK,EAAE,EAAE;IACzB,MAAMa,WAAW,GAAGd,OAAO,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACvC,MAAMC,YAAY,GAAGhB,OAAO,CAACe,KAAK,CAAC,CAAC,CAAC;IAErC,oBAAOnB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EACpB;EAEA,oBAAOxB,OAAA;IAAAyB,QAAA,EAAK;EAAc;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAClC;AAACrB,EAAA,CA9BuBF,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}